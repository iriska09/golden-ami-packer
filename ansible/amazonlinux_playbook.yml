
# - name: CIS Level 1 Hardening - Amazon Linux 2023
#   hosts: all
#   become: true

#   vars:
#     sshd_config_path: /etc/ssh/sshd_config

#   tasks:

#     # ------------------- SSH Installation and Setup -------------------
#     - name: Check if OpenSSH server is installed
#       stat:
#         path: /usr/sbin/sshd
#       register: sshd_installed

#     - name: Install OpenSSH server if not present
#       package:
#         name: openssh-server
#         state: present
#       when: not sshd_installed.stat.exists

#     - name: Verify SSH service name
#       shell: systemctl list-unit-files | grep -E "^sshd.*service" || true
#       register: ssh_service_check
#       changed_when: false

#     - name: Set correct SSH service name fact
#       set_fact:
#         ssh_service_name: "{{ 'sshd' if 'sshd.service' in ssh_service_check.stdout else 'ssh' }}"

#     - name: Ensure SSH service is enabled and running
#       systemd:
#         name: "{{ ssh_service_name }}"
#         enabled: yes
#         state: started

#     # ------------------- SSH Configuration -------------------
#     - name: Configure SSH settings
#       block:
#         - name: Disable root login via SSH
#           lineinfile:
#             path: "{{ sshd_config_path }}"
#             regexp: '^PermitRootLogin'
#             line: 'PermitRootLogin no'
#             backup: yes
#         - name: Disable password authentication
#           lineinfile:
#             path: "{{ sshd_config_path }}"
#             regexp: '^PasswordAuthentication'
#             line: 'PasswordAuthentication no'
#             backup: yes
#         - name: Set SSH protocol to 2
#           lineinfile:
#             path: "{{ sshd_config_path }}"
#             regexp: '^Protocol'
#             line: 'Protocol 2'
#             backup: yes
#         - name: Explicitly set SSH Port 22
#           lineinfile:
#             path: "{{ sshd_config_path }}"
#             regexp: '^Port'
#             line: 'Port 22'
#             backup: yes
#         - name: Restart SSH service to apply changes
#           service:
#             name: "{{ ssh_service_name }}"
#             state: restarted

#     # ------------------- Password Policies -------------------
#     - name: Set password max days to 90
#       lineinfile:
#         path: /etc/login.defs
#         regexp: '^PASS_MAX_DAYS'
#         line: 'PASS_MAX_DAYS 90'

#     - name: Set password min days to 7
#       lineinfile:
#         path: /etc/login.defs
#         regexp: '^PASS_MIN_DAYS'
#         line: 'PASS_MIN_DAYS 7'

#     - name: Set warning age for password expiration
#       lineinfile:
#         path: /etc/login.defs
#         regexp: '^PASS_WARN_AGE'
#         line: 'PASS_WARN_AGE 14'

#     - name: Check if pwquality.conf exists
#       stat:
#         path: /etc/security/pwquality.conf
#       register: pwquality_conf

#     - name: Set minimum password length to 14
#       lineinfile:
#         path: /etc/security/pwquality.conf
#         regexp: '^minlen'
#         line: 'minlen = 14'
#       when: pwquality_conf.stat.exists

#     - name: Set password hashing rounds
#       lineinfile:
#         path: /etc/login.defs
#         regexp: '^SHA_CRYPT_MIN_ROUNDS'
#         line: 'SHA_CRYPT_MIN_ROUNDS 640000'

#     # ------------------- Kernel Hardening -------------------
#     - name: Configure kernel parameters (persisted)
#       copy:
#         dest: /etc/sysctl.d/cis-hardening.conf
#         content: |
#           fs.protected_fifos = 2
#           fs.protected_regular = 2
#           kernel.kptr_restrict = 2
#           kernel.perf_event_paranoid = 3
#           kernel.sysrq = 0
#           kernel.yama.ptrace_scope = 1
#           net.core.bpf_jit_harden = 2
#           net.ipv4.conf.all.accept_redirects = 0
#           net.ipv4.conf.all.log_martians = 1
#           net.ipv4.conf.all.rp_filter = 1
#           net.ipv4.conf.all.send_redirects = 0
#           net.ipv4.conf.default.accept_redirects = 0
#           net.ipv4.conf.default.log_martians = 1
#           net.ipv6.conf.all.accept_redirects = 0
#           net.ipv6.conf.default.accept_redirects = 0
#       notify: reload sysctl

#     # ------------------- audit ad logging -------------------
#     - name: Ensure auditd is installed
#       package:
#         name: auditd
#         state: present

#     - name: Enable and start auditd
#       service:
#         name: auditd
#         enabled: true
#         state: started

#     - name: Set audit rules file permissions
#       file:
#         path: /etc/audit/audit.rules
#         mode: '0640'

#     - name: Set audit config file permissions
#       file:
#         path: /etc/audit/auditd.conf
#         mode: '0640'

#     - name: Configure remote logging
#       lineinfile:
#         path: /etc/rsyslog.conf
#         line: '*.* @loghost.example.com'
#       notify: restart rsyslog


#     # ------------------- Unused Services -------------------
#     - name: Remove unnecessary packages
#       package:
#         name: "{{ item }}"
#         state: absent
#       loop:
#         - telnet
#         - rsh
#         - talk
#         - xinetd

#     - name: Disable USB storage persistently
#       copy:
#         dest: /etc/modprobe.d/disable-usb.conf
#         content: "blacklist usb-storage"

#     - name: Disable firewire persistently
#       copy:
#         dest: /etc/modprobe.d/disable-firewire.conf
#         content: "blacklist firewire-ohci"

#     # ------------------- File Permissions -------------------
#     - name: Set permissions for /etc/passwd
#       file:
#         path: /etc/passwd
#         owner: root
#         group: root
#         mode: '0644'

#     - name: Set permissions for /etc/shadow
#       file:
#         path: /etc/shadow
#         owner: root
#         group: root
#         mode: '0000'

#     - name: Set permissions for /etc/group
#       file:
#         path: /etc/group
#         owner: root
#         group: root
#         mode: '0644'

#     - name: Set strict umask in login.defs
#       lineinfile:
#         path: /etc/login.defs
#         regexp: '^UMASK'
#         line: 'UMASK 027'

#     # ------------------- Security Tools -------------------
#     - name: Install rkhunter
#       package:
#         name: rkhunter
#         state: present

#     - name: Install AIDE
#       package:
#         name: aide
#         state: present




#     - name: Install fail2ban
#       package:
#         name: fail2ban
#         state: present

#     # ------------------- Legal Banners -------------------
#     - name: Set /etc/issue banner
#       copy:
#         dest: /etc/issue
#         content: |
#           WARNING: Unauthorized access to this system is forbidden and will be
#           prosecuted by law. By accessing this system, you agree that your actions
#           may be monitored if unauthorized usage is suspected.
#         owner: root
#         group: root
#         mode: '0644'

#     - name: Set /etc/issue.net banner
#       copy:
#         dest: /etc/issue.net
#         content: |
#           WARNING: Unauthorized access to this system is forbidden and will be
#           prosecuted by law. By accessing this system, you agree that your actions
#           may be monitored if unauthorized usage is suspected.
#         owner: root
#         group: root
#         mode: '0644'

#   handlers:
#     - name: restart rsyslog
#       service:
#         name: rsyslog
#         state: restarted

#     - name: reload sysctl
#       command: sysctl --system
---
- name: Amazon Linux 2023 Hardening Playbook (CIS + SOC Compliance)
  hosts: all
  become: true
  vars:
    cis_level: "1"  # Change to "2" for Level 2 hardening
    enable_soc_compliance: true
    min_password_length: 14
    password_max_days: 90
    ssh_timeout: 300

  tasks:
    # ========== Package Management ==========
    - name: Remove insecure packages
      ansible.builtin.package:
        name: "{{ item }}"
        state: absent
      loop:
        - telnet
        - rsh
        - ypbind
        - tftp
        - talk
        - xinetd
        - prelink
        - vsftpd

    - name: Install security tools
      ansible.builtin.package:
        name:
          - aide
          - rsyslog
          - audit-libs  # Correct package name for AL2023
          - scap-security-guide
          - fail2ban
          - audit  # This is now available after installing audit-libs
        state: present

    - name: Ensure GPG checking is enabled
      ansible.builtin.lineinfile:
        path: /etc/dnf/dnf.conf
        regexp: '^gpgcheck='
        line: 'gpgcheck=1'
        insertafter: '^\[main\]'

    - name: Disable USB storage
      ansible.builtin.lineinfile:
        path: /etc/modprobe.d/disable-usb-storage.conf
        line: 'install usb-storage /bin/true'
        create: yes

    # ========== Filesystem Permissions ==========
    - name: Set strict permissions on critical files
      ansible.builtin.file:
        path: "{{ item.path }}"
        owner: "{{ item.owner | default('root') }}"
        group: "{{ item.group | default('root') }}"
        mode: "{{ item.mode }}"
      loop:
        - { path: /etc/passwd, mode: '0644' }
        - { path: /etc/shadow, mode: '0000' }
        - { path: /etc/group, mode: '0644' }
        - { path: /etc/gshadow, mode: '0000' }
        - { path: /etc/passwd-, mode: '0644' }
        - { path: /etc/shadow-, mode: '0000' }
        - { path: /etc/group-, mode: '0644' }
        - { path: /etc/gshadow-, mode: '0000' }
        - { path: /etc/ssh/sshd_config, mode: '0600' }

    - name: Configure /tmp mount with noexec,nosuid,nodev
      ansible.builtin.mount:
        path: /tmp
        src: /tmp
        fstype: tmpfs
        opts: defaults,noexec,nosuid,nodev,bind
        state: present

    # ========== Account Policies ==========
    - name: Set password policies
      ansible.builtin.lineinfile:
        path: /etc/security/pwquality.conf
        regexp: "^{{ item.key }} ="
        line: "{{ item.key }} = {{ item.value }}"
      loop:
        - { key: "minlen", value: "{{ min_password_length }}" }
        - { key: "minclass", value: "4" }
        - { key: "maxrepeat", value: "3" }
        - { key: "maxsequence", value: "4" }
        - { key: "dictcheck", value: "1" }

    - name: Configure password aging
      ansible.builtin.lineinfile:
        path: /etc/login.defs
        regexp: "^{{ item.key }}"
        line: "{{ item.key }} {{ item.value }}"
      with_items:
        - { key: "PASS_MAX_DAYS", value: "{{ password_max_days }}" }
        - { key: "PASS_MIN_DAYS", value: "7" }
        - { key: "PASS_WARN_AGE", value: "7" }

    - name: Lock inactive accounts after 30 days
      ansible.builtin.command: useradd -D -f 30

    - name: Set default umask for users
      ansible.builtin.lineinfile:
        path: /etc/bashrc
        insertafter: '^# umask'
        line: 'umask 027'

    # ========== SSH Hardening ==========
    - name: Configure secure SSH settings
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^{{ item.key }}"
        line: "{{ item.key }} {{ item.value }}"
        validate: /usr/sbin/sshd -t -f %s
      loop:
        - { key: "Protocol", value: "2" }
        - { key: "LogLevel", value: "VERBOSE" }
        - { key: "X11Forwarding", value: "no" }
        - { key: "MaxAuthTries", value: "4" }
        - { key: "IgnoreRhosts", value: "yes" }
        - { key: "HostbasedAuthentication", value: "no" }
        - { key: "PermitRootLogin", value: "no" }
        - { key: "PermitEmptyPasswords", value: "no" }
        - { key: "PermitUserEnvironment", value: "no" }
        - { key: "ClientAliveInterval", value: "{{ ssh_timeout }}" }
        - { key: "ClientAliveCountMax", value: "0" }
        - { key: "LoginGraceTime", value: "60" }
        - { key: "Banner", value: "/etc/issue.net" }
        - { key: "UsePAM", value: "yes" }
        - { key: "AllowTcpForwarding", value: "no" }
        - { key: "Ciphers", value: "aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr" }  # Simplified for AL2023
        - { key: "MACs", value: "hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com" }
        - { key: "KexAlgorithms", value: "curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512" }
      notify: restart sshd

    # ========== Network Configuration ==========
    - name: Disable IPv6 if not needed
      ansible.builtin.sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      loop:
        - { key: "net.ipv6.conf.all.disable_ipv6", value: "1" }
        - { key: "net.ipv6.conf.default.disable_ipv6", value: "1" }

    - name: Configure secure kernel parameters
      ansible.builtin.sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      loop:
        - { key: "net.ipv4.ip_forward", value: "0" }
        - { key: "net.ipv4.conf.all.send_redirects", value: "0" }
        - { key: "net.ipv4.conf.default.send_redirects", value: "0" }
        - { key: "net.ipv4.conf.all.accept_source_route", value: "0" }
        - { key: "net.ipv4.conf.default.accept_source_route", value: "0" }
        - { key: "net.ipv4.conf.all.accept_redirects", value: "0" }
        - { key: "net.ipv4.conf.default.accept_redirects", value: "0" }
        - { key: "net.ipv4.conf.all.secure_redirects", value: "0" }
        - { key: "net.ipv4.conf.default.secure_redirects", value: "0" }
        - { key: "net.ipv4.conf.all.log_martians", value: "1" }
        - { key: "net.ipv4.conf.default.log_martians", value: "1" }
        - { key: "net.ipv4.icmp_echo_ignore_broadcasts", value: "1" }
        - { key: "net.ipv4.icmp_ignore_bogus_error_responses", value: "1" }
        - { key: "net.ipv4.tcp_syncookies", value: "1" }
        - { key: "net.ipv4.tcp_max_syn_backlog", value: "4096" }
        - { key: "fs.suid_dumpable", value: "0" }
        - { key: "kernel.randomize_va_space", value: "2" }

    # ========== Logging and Auditing ==========
    - name: Install audit packages
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
        - audit-libs
        - audit
        - audispd-plugins

    - name: Enable auditd service
      ansible.builtin.service:
        name: auditd
        state: started
        enabled: yes

    - name: Configure audit rules (SOC compliance)
      ansible.builtin.copy:
        dest: /etc/audit/rules.d/99-finalize.rules
        content: |
          ## Buffer size
          -b 8192

          ## Make the configuration immutable
          -e 2
        mode: '0600'

    - name: Load audit rules
      ansible.builtin.command: augenrules --load
      changed_when: false

    - name: Ensure rsyslog is enabled
      ansible.builtin.service:
        name: rsyslog
        state: started
        enabled: yes

    # ========== PAM Configuration ==========
    - name: Configure secure PAM settings
      ansible.builtin.copy:
        dest: /etc/pam.d/system-auth
        content: |
          auth        required      pam_faillock.so preauth silent audit deny=5 unlock_time=900
          auth        sufficient    pam_unix.so try_first_pass
          auth        [default=die] pam_faillock.so authfail audit deny=5 unlock_time=900
          auth        required      pam_faillock.so authsucc audit deny=5 unlock_time=900
          auth        required      pam_deny.so

          account     required      pam_unix.so
          account     sufficient    pam_localuser.so
          account     sufficient    pam_succeed_if.so uid < 1000 quiet
          account     required      pam_permit.so

          password    requisite     pam_pwquality.so try_first_pass local_users_only retry=3 authtok_type=
          password    sufficient    pam_unix.so sha512 shadow try_first_pass use_authtok remember=5
          password    required      pam_deny.so

          session     optional      pam_keyinit.so revoke
          session     required      pam_limits.so
          -session    optional      pam_systemd.so
          session     [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid
          session     required      pam_unix.so

    # ========== Cron Configuration ==========
    - name: Restrict cron to authorized users
      ansible.builtin.copy:
        dest: /etc/cron.allow
        content: |
          root
        mode: '0600'

    - name: Remove cron.deny if exists
      ansible.builtin.file:
        path: /etc/cron.deny
        state: absent

    # ========== Additional Security Settings ==========
    - name: Initialize AIDE
      ansible.builtin.command: |
        aide --init
        mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz
      changed_when: false

    - name: Set MOTD banner
      ansible.builtin.copy:
        dest: /etc/motd
        content: |
          WARNING: Unauthorized access to this system is forbidden and will be
          prosecuted by law. By accessing this system, you agree that your actions
          may be monitored if unauthorized usage is suspected.

    - name: Set issue.net banner (for SSH)
      ansible.builtin.copy:
        dest: /etc/issue.net
        content: |
          Unauthorized access prohibited. All activity may be monitored and reported.

    # ========== CIS Level 2 Hardening (Conditional) ==========
    - name: Additional CIS Level 2 hardening
      when: cis_level == "2"
      block:
        - name: Enable SELinux in enforcing mode
          ansible.builtin.lineinfile:
            path: /etc/selinux/config
            regexp: '^SELINUX='
            line: 'SELINUX=enforcing'

        - name: Set SELinux policy
          ansible.builtin.lineinfile:
            path: /etc/selinux/config
            regexp: '^SELINUXTYPE='
            line: 'SELINUXTYPE=targeted'

        - name: Install and enable firewalld
          ansible.builtin.package:
            name: firewalld
            state: present

        - name: Start and enable firewalld
          ansible.builtin.service:
            name: firewalld
            state: started
            enabled: yes

        - name: Configure default firewalld zone
          ansible.builtin.command: firewall-cmd --set-default-zone=drop

      tags: cis_level2

    # ========== SOC Compliance (Conditional) ==========
    - name: Additional SOC compliance settings
      when: enable_soc_compliance
      block:
        - name: Enable session timeout for shell
          ansible.builtin.lineinfile:
            path: /etc/profile.d/session_timeout.sh
            line: 'TMOUT=900'
            create: yes
            mode: '0644'

        - name: Enable command history with timestamps
          ansible.builtin.lineinfile:
            path: /etc/profile.d/history.sh
            line: 'export HISTTIMEFORMAT="%F %T "'
            create: yes
            mode: '0644'

        - name: Increase history size
          ansible.builtin.lineinfile:
            path: /etc/profile.d/history.sh
            line: 'export HISTSIZE=5000'
            insertafter: '^export HISTTIMEFORMAT='

        - name: Configure logrotate for audit logs
          ansible.builtin.copy:
            dest: /etc/logrotate.d/audit
            content: |
              /var/log/audit/*.log {
                  weekly
                  missingok
                  rotate 52
                  compress
                  delaycompress
                  notifempty
                  create 0600 root root
              }

      tags: soc_compliance

  handlers:
    - name: restart sshd
      ansible.builtin.service:
        name: sshd
        state: restarted

    - name: reload sysctl
      ansible.builtin.command: sysctl --system